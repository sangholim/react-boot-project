package com.spa.all.config.dbc;

import org.reactivestreams.Publisher;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.ApplicationArguments;
import org.springframework.boot.ApplicationRunner;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.r2dbc.core.DatabaseClient;

import io.r2dbc.pool.ConnectionPool;
import io.r2dbc.pool.ConnectionPoolConfiguration;
import io.r2dbc.spi.Connection;
import io.r2dbc.spi.ConnectionFactories;
import io.r2dbc.spi.ConnectionFactory;

@Configuration
public class MysqlConfig implements ApplicationRunner  {

    private ConnectionFactory connectionFactory;
    
    private ConnectionPool connectionPool;
    
    @Value("${spring.r2dbc.url}")
    private String url;
    @Value("${spring.r2dbc.username}")
    private String username;
    @Value("${spring.r2dbc.password}")
    private String password;
    @Value("${spring.r2dbc.pool.initialSize}")
    private int initialSize;
    @Value("${spring.r2dbc.pool.maxSize}")
    private int maxSize;

    private DatabaseClient client;
    
    @Override
    public void run(ApplicationArguments args) throws Exception {
	// r2dbc:mysql://user:user@localhost:3306/todos?useUnicode=true&characterEncoding=utf8
	String[] urlComps = url.split("//");
	
	connectionFactory = ConnectionFactories.get(urlComps[0] + "//" + username + ':' + password + '@' + urlComps[1]);
	client = DatabaseClient.create(connectionFactory);
	configuration = Config
    }


    /**
     * db에 세션 접속하는 로직
     * 
     * @return
     */
    public Publisher<? extends Connection> createConnection() {
	return connectionFactory.create();
    }
    
    public DatabaseClient createClient () {
	return client;
    }
}
